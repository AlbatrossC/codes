{
    "Group A": [
        {
            "question": "Implement a class Complex which represents the Complex Number data type. Implement the following: 1. Constructor (including a default constructor which creates the complex number 0+0i). 2. Overload operator+ to add two complex numbers. 3. Overload operator* to multiply two complex numbers. 4. Overload operators << and >> to print and read Complex Numbers.",
            "answer": "oop/grpA_1.cpp"
        },
        {
            "question": "Develop a program in C++ to create a database of studentâ€™s information system containing the following information: Name, Roll number, Class, Division, Date of Birth, Blood group, Contact address, Telephone number, Driving license no. and other. Construct the database with suitable member functions. Make use of constructor, default constructor, copy constructor, destructor, static member functions, friend class, this pointer, inline code, and dynamic memory allocation operators-new and delete as well as exception handling.",
            "answer": "oop/grpA_2.cpp"
        }
    ],
    "Group B": [
        {
            "question": "Write a C++ program that creates an output file, writes information to it, closes the file, opens it again as an input file and reads the information from the file.",
            "answer": "oop/grpB_4.cpp"
        },
        {
            "question": "Write a function template for selection sort that inputs, sorts, and outputs an integer array and a float array.",
            "answer": "oop/grpB_5.cpp"
        }
    ],
    "Group C": [
        {
            "question": "Write a C++ program using STL for sorting and searching user-defined records such as personal records (Name, DOB, Telephone number, etc.) using the vector container. The program should allow the user to enter multiple records and then sort them based on a chosen field (e.g., Name or DOB). Implement search functionality to find a specific record.",
            "answer": "oop/grpC_6.cpp"
        }
    ],
    "Group D": [
        {
            "question": "Write a C++ program to use the map associative container. The keys will be the names of states, and the values will be the populations of the states. When the program runs, the user is prompted to type the name of a state. The program then looks in the map, using the state name as an index, and returns the population of the state. Include error handling for cases where the state name does not exist in the map.",
            "answer": "oop/grpD_7.cpp"
        }
    ]
}
